{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","componentDidMount","fetch","then","response","json","users","setState","e","searchField","target","value","state","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAceA,EAXF,SAAAC,GAAK,OACjB,sBAAKC,UAAU,iBAAf,UACC,qBACCC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BACHC,IAAI,KAEL,+BAAKL,EAAMG,QAAQG,KAAnB,OACA,kCAAKN,EAAMG,QAAQI,MAAnB,WCIaC,G,MAVS,SAAAR,GACvB,OACC,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCKRO,G,MATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACjB,uBACCZ,UAAU,SACVa,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCkCGG,G,wDApCd,aAAe,IAAD,8BACb,gBAODC,kBAAoB,WACnBC,MAAM,8CAA8CC,MAAK,SAAAC,GAAQ,OAChEA,EAASC,OAAOF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEd,SAAUa,WAV5C,EAcdT,aAAe,SAAAW,GACd,EAAKD,SAAS,CAAEE,YAAaD,EAAEE,OAAOC,SAbtC,EAAKC,MAAQ,CACZnB,SAAU,GACVgB,YAAa,KAJD,E,0CAkBd,WAAU,IAAD,EAC0BI,KAAKD,MAA/BnB,EADA,EACAA,SAAUgB,EADV,EACUA,YACZK,EAAmBrB,EAASsB,QAAO,SAAA5B,GAAO,OAC/CA,EAAQG,KAAK0B,cAAcC,SAASR,EAAYO,kBAEjD,OACC,sBAAK/B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAY,iBACZC,aAAcgB,KAAKhB,eAEpB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BNI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.540822fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = props => (\r\n\t<div className=\"card-container\">\r\n\t\t<img\r\n\t\t\tsrc={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n\t\t\talt=\"\"\r\n\t\t/>\r\n\t\t<h2>{props.monster.name} </h2>\r\n\t\t<p> {props.monster.email} </p>\r\n\t</div>\r\n);\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n\treturn (\r\n\t\t<div className=\"card-list\">\r\n\t\t\t{props.monsters.map(monster => (\r\n\t\t\t\t<Card key={monster.id} monster={monster} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => (\r\n\t<input\r\n\t\tclassName=\"search\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder={placeholder}\r\n\t\tonChange={handleChange}\r\n\t/>\r\n);\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: ' '\n\t\t};\n\t}\n\n\tcomponentDidMount = () => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response =>\n\t\t\tresponse.json().then(users => this.setState({ monsters: users }))\n\t\t);\n\t};\n\n\thandleChange = e => {\n\t\tthis.setState({ searchField: e.target.value });\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder=\"search monsers\"\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n\t\t\t\t<CardList monsters={filteredMonsters} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}